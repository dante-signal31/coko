################################
# GENERAL CONFIGURATION
################################
language: python
# We are going to need a full-VM to run docker containers inside.
# Besides coko tests needs sudo to test chown related features.
sudo: enabled
dist: xenial
group: travis_latest
# Vdist needs docker enabled to work.
services:
- docker

################################
# TEST MATRIX
################################
python:
- 3.7

################################
# BRANCH FILTER
################################
branches:
  only:
  - staging

################################
# RESULT NOTIFICATIONS
################################
notifications:
  recipients:
  - dante.signal31@gmail.com
  on_sucess: always
  on_failure: always

################################
# TESTING
################################
before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -qq libssl1.0.0
install:
  - pip install -r requirements.txt
script:
  # If I call simply python3 Travis launch it system wide python3, not the
  # specially installed python3 for this build. So I have to use the
  # full path to the created. virtualenv.
  - sudo ~/virtualenv/python3.7/bin/python3 -m unittest discover

################################
# DEPLOYMENT
################################
jobs:
  include:
  # Update master branch.
  - stage: Branch merge to production branch
    python: 3.7
    env:
    - PYTHONPATH="${PYTHONPATH}:${TRAVIS_BUILD_DIR}"
    if: branch = staging
    script:
    - ci_scripts/merge_with_production
#  # Upload packages to Python Package Index.
#  - stage: Pypi deployment
#    python: 3.7
#    script: echo "Deploying to Python Package Index..."
#    deploy:
#    - provider: pypi
#      user: "${PYPI_USER}"
#      password: "${PYPI_PASSWORD}"
#      distributions: "sdist bdist_wheel"
#      on:
#        branch: staging
  # Build DEB and RPM packages and upload them to Github and Bintray.
  - stage: System packages deployment
    python: 3.7
    env:
    - PYTHONPATH="${PYTHONPATH}:${TRAVIS_BUILD_DIR}"
    if: branch = staging
    script:
    - travis_wait 20 ci_scripts/build_system_packages
    - ci_scripts/tag_release
    - ci_scripts/create_bintray_descriptors_from_templates
    deploy:
    # Github Releases.
    - provider: releases
      api_key: "${GITHUB_TOKEN}"
      file_glob: true
      file: package_dist/*
      skip_cleanup: true
      on:
        all_branches: true
    # Bintray deb repository.
    - provider: bintray
      file: "packaging/coko_deb_bintray_descriptor.json"
      user: "${GITHUB_USER}"
      key: "${BINTRAY_TOKEN}"
      skip_cleanup: true
      on:
        all_branches: true
    # Bintray rpm repository.
    - provider: bintray
      file: "packaging/coko_rpm_bintray_descriptor.json"
      user: "${GITHUB_USER}"
      key: "${BINTRAY_TOKEN}"
      skip_cleanup: true
      on:
        all_branches: true